import * as proto from "./proto/google/protobuf/any";
import * as Contracts from "./proto/contracts";
import { Transaction as T, TXContract, TXContract_ContractType } from "./proto/transaction";
export { Contracts, TXContract, TXContract_ContractType, proto };
declare class Transaction {
    data: T;
    constructor(data?: any[] | {
        Nonce?: number;
        Sender?: Uint8Array;
        Contract?: TXContract[];
        PermissionID?: number;
        Data?: Uint8Array[];
        KAppFee?: number;
        BandwidthFee?: number;
        Version?: number;
        ChainID?: Uint8Array;
    });
    addContract: (type: TXContract_ContractType, contract: any) => Promise<void>;
    signMessage: (message: string, privateKey: string) => Promise<Uint8Array>;
    computeHash: () => string;
    sign: (privateKey: string) => Promise<Boolean>;
    hex: () => string;
    fromHex: (hex: string) => void;
    toJSON: () => string;
    decode: () => string;
    toBroadcast: () => any;
}
export default Transaction;
