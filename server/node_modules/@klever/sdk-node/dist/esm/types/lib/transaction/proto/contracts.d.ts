import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import { FileDescriptorProto } from "ts-proto-descriptors";
export declare const protobufPackage = "proto";
/** TXContract available */
export interface TransferContract {
    ToAddress?: Uint8Array | undefined;
    AssetID?: Uint8Array | undefined;
    Amount?: number | undefined;
    KDARoyalties?: number | undefined;
    KLVRoyalties?: number | undefined;
}
/** CreateAssetContract holds the data for a Klever digital asset */
export interface CreateAssetContract {
    Type?: CreateAssetContract_EnumAssetType | undefined;
    Name?: Uint8Array | undefined;
    Ticker?: Uint8Array | undefined;
    OwnerAddress?: Uint8Array | undefined;
    Logo?: string | undefined;
    URIs?: {
        [key: string]: string;
    } | undefined;
    Precision?: number | undefined;
    InitialSupply?: number | undefined;
    MaxSupply?: number | undefined;
    Royalties?: RoyaltiesInfo | undefined;
    Properties?: PropertiesInfo | undefined;
    Attributes?: AttributesInfo | undefined;
    Staking?: StakingInfo | undefined;
    Roles?: RolesInfo[] | undefined;
    AdminAddress?: Uint8Array | undefined;
}
export declare enum CreateAssetContract_EnumAssetType {
    Fungible = 0,
    NonFungible = 1,
    SemiFungible = 2,
    UNRECOGNIZED = -1
}
export declare function createAssetContract_EnumAssetTypeFromJSON(object: any): CreateAssetContract_EnumAssetType;
export declare function createAssetContract_EnumAssetTypeToJSON(object: CreateAssetContract_EnumAssetType): number;
export interface CreateAssetContract_URIsEntry {
    key: string;
    value: string;
}
/** PropertiesInfo hold the properties structure for the KDA asset */
export interface PropertiesInfo {
    CanFreeze?: boolean | undefined;
    CanWipe?: boolean | undefined;
    CanPause?: boolean | undefined;
    CanMint?: boolean | undefined;
    CanBurn?: boolean | undefined;
    CanChangeOwner?: boolean | undefined;
    CanAddRoles?: boolean | undefined;
    LimitTransfer?: boolean | undefined;
}
/** AttributesInfo hold the attributes structure for the KDA asset */
export interface AttributesInfo {
    IsPaused?: boolean | undefined;
    IsNFTMintStopped?: boolean | undefined;
    IsRoyaltiesChangeStopped?: boolean | undefined;
    IsNFTMetadataChangeStopped?: boolean | undefined;
}
/** StakingInfo hold the staking structure for the KDA asset */
export interface StakingInfo {
    Type?: StakingInfo_InterestType | undefined;
    APR?: number | undefined;
    MinEpochsToClaim?: number | undefined;
    MinEpochsToUnstake?: number | undefined;
    MinEpochsToWithdraw?: number | undefined;
}
export declare enum StakingInfo_InterestType {
    APRI = 0,
    FPRI = 1,
    UNRECOGNIZED = -1
}
export declare function stakingInfo_InterestTypeFromJSON(object: any): StakingInfo_InterestType;
export declare function stakingInfo_InterestTypeToJSON(object: StakingInfo_InterestType): number;
/** RolesInfo holds the roles for a given asset and the given address */
export interface RolesInfo {
    Address?: Uint8Array | undefined;
    HasRoleMint?: boolean | undefined;
    HasRoleSetITOPrices?: boolean | undefined;
    HasRoleDeposit?: boolean | undefined;
    HasRoleTransfer?: boolean | undefined;
}
/** RoyaltiesInfo holds the royalties for a given asset */
export interface RoyaltiesInfo {
    Address?: Uint8Array | undefined;
    TransferPercentage?: RoyaltyInfo[] | undefined;
    TransferFixed?: number | undefined;
    MarketPercentage?: number | undefined;
    MarketFixed?: number | undefined;
    SplitRoyalties?: {
        [key: string]: RoyaltySplitInfo;
    } | undefined;
    ITOFixed?: number | undefined;
    ITOPercentage?: number | undefined;
}
export interface RoyaltiesInfo_SplitRoyaltiesEntry {
    key: string;
    value?: RoyaltySplitInfo | undefined;
}
/** RoyaltySplitInfo holds the royalty split */
export interface RoyaltySplitInfo {
    PercentTransferPercentage?: number | undefined;
    PercentTransferFixed?: number | undefined;
    PercentMarketPercentage?: number | undefined;
    PercentMarketFixed?: number | undefined;
    PercentITOPercentage?: number | undefined;
    PercentITOFixed?: number | undefined;
}
/** RoyaltyInfo holds the royalty threshold */
export interface RoyaltyInfo {
    Amount?: number | undefined;
    Percentage?: number | undefined;
}
/** KDAPoolInfo holds the KDA Fee pool info */
export interface KDAPoolInfo {
    Active?: boolean | undefined;
    AdminAddress?: Uint8Array | undefined;
    FRatioKDA?: number | undefined;
    FRatioKLV?: number | undefined;
}
/** AssetTriggerContract triggers assets functions */
export interface AssetTriggerContract {
    TriggerType?: AssetTriggerContract_EnumTriggerType | undefined;
    AssetID?: Uint8Array | undefined;
    ToAddress?: Uint8Array | undefined;
    Amount?: number | undefined;
    MIME?: Uint8Array | undefined;
    Logo?: string | undefined;
    URIs?: {
        [key: string]: string;
    } | undefined;
    Role?: RolesInfo | undefined;
    Staking?: StakingInfo | undefined;
    Royalties?: RoyaltiesInfo | undefined;
    KDAPool?: KDAPoolInfo | undefined;
    Value?: number | undefined;
}
export declare enum AssetTriggerContract_EnumTriggerType {
    Mint = 0,
    Burn = 1,
    Wipe = 2,
    Pause = 3,
    Resume = 4,
    ChangeOwner = 5,
    AddRole = 6,
    RemoveRole = 7,
    UpdateMetadata = 8,
    StopNFTMint = 9,
    UpdateLogo = 10,
    UpdateURIs = 11,
    ChangeRoyaltiesReceiver = 12,
    UpdateStaking = 13,
    UpdateRoyalties = 14,
    UpdateKDAFeePool = 15,
    StopRoyaltiesChange = 16,
    StopNFTMetadataChange = 17,
    ChangeAdmin = 18,
    UNRECOGNIZED = -1
}
export declare function assetTriggerContract_EnumTriggerTypeFromJSON(object: any): AssetTriggerContract_EnumTriggerType;
export declare function assetTriggerContract_EnumTriggerTypeToJSON(object: AssetTriggerContract_EnumTriggerType): number;
export interface AssetTriggerContract_URIsEntry {
    key: string;
    value: string;
}
/** ValidatorConfig holds the data for a validator configuration */
export interface ValidatorConfig {
    BLSPublicKey?: Uint8Array | undefined;
    RewardAddress?: Uint8Array | undefined;
    CanDelegate?: boolean | undefined;
    Commission?: number | undefined;
    MaxDelegationAmount?: number | undefined;
    Logo?: string | undefined;
    URIs?: {
        [key: string]: string;
    } | undefined;
    Name?: string | undefined;
}
export interface ValidatorConfig_URIsEntry {
    key: string;
    value: string;
}
/** CreateValidatorContract holds the data for create a validator */
export interface CreateValidatorContract {
    OwnerAddress?: Uint8Array | undefined;
    Config?: ValidatorConfig | undefined;
}
/** ValidatorConfigContract holds the data for a validator configuration transaction */
export interface ValidatorConfigContract {
    Config?: ValidatorConfig | undefined;
}
/** FreezeContract holds the data for a freeze transaction */
export interface FreezeContract {
    AssetID?: Uint8Array | undefined;
    Amount?: number | undefined;
}
/** UnfreezeContract holds the data for a unfreeze transaction */
export interface UnfreezeContract {
    AssetID?: Uint8Array | undefined;
    BucketID?: Uint8Array | undefined;
}
/** DelegateContract holds the data for a delegate transaction */
export interface DelegateContract {
    ToAddress?: Uint8Array | undefined;
    BucketID?: Uint8Array | undefined;
}
/** UndelegateContract holds the data for a undelegate transaction */
export interface UndelegateContract {
    BucketID?: Uint8Array | undefined;
}
/** WithdrawContract holds the data for a withdraw transaction */
export interface WithdrawContract {
    AssetID?: Uint8Array | undefined;
    WithdrawType?: WithdrawContract_EnumWithdrawType | undefined;
    amount?: number | undefined;
    CurrencyID?: Uint8Array | undefined;
}
export declare enum WithdrawContract_EnumWithdrawType {
    Staking = 0,
    KDAPool = 1,
    UNRECOGNIZED = -1
}
export declare function withdrawContract_EnumWithdrawTypeFromJSON(object: any): WithdrawContract_EnumWithdrawType;
export declare function withdrawContract_EnumWithdrawTypeToJSON(object: WithdrawContract_EnumWithdrawType): number;
/** ClaimContract holds the data for a claim transaction */
export interface ClaimContract {
    ClaimType?: ClaimContract_EnumClaimType | undefined;
    ID?: Uint8Array | undefined;
}
export declare enum ClaimContract_EnumClaimType {
    StakingClaim = 0,
    AllowanceClaim = 1,
    MarketClaim = 2,
    UNRECOGNIZED = -1
}
export declare function claimContract_EnumClaimTypeFromJSON(object: any): ClaimContract_EnumClaimType;
export declare function claimContract_EnumClaimTypeToJSON(object: ClaimContract_EnumClaimType): number;
/** UnjailContract holds the data for a unjail transaction */
export interface UnjailContract {
}
/** SetAccountNameContract holds the data for a setAccountName transaction */
export interface SetAccountNameContract {
    Name?: Uint8Array | undefined;
}
/** ProposalContract holds the data for a proposal transaction */
export interface ProposalContract {
    Parameters?: {
        [key: number]: Uint8Array;
    } | undefined;
    Description?: Uint8Array | undefined;
    EpochsDuration?: number | undefined;
}
export interface ProposalContract_ParametersEntry {
    key: number;
    value: Uint8Array;
}
/** VoteContract holds the data for a vote transaction */
export interface VoteContract {
    ProposalID?: number | undefined;
    Amount?: number | undefined;
    Type?: VoteContract_EnumVoteType | undefined;
}
export declare enum VoteContract_EnumVoteType {
    Yes = 0,
    No = 1,
    UNRECOGNIZED = -1
}
export declare function voteContract_EnumVoteTypeFromJSON(object: any): VoteContract_EnumVoteType;
export declare function voteContract_EnumVoteTypeToJSON(object: VoteContract_EnumVoteType): number;
/** ConfigITOContract holds the data for a ConfigITO transaction */
export interface ConfigITOContract {
    AssetID?: Uint8Array | undefined;
    ReceiverAddress?: Uint8Array | undefined;
    Status?: ConfigITOContract_EnumITOStatus | undefined;
    MaxAmount?: number | undefined;
    PackInfo?: {
        [key: string]: PackInfo;
    } | undefined;
    DefaultLimitPerAddress?: number | undefined;
    WhitelistStatus?: ConfigITOContract_EnumITOStatus | undefined;
    WhitelistInfo?: {
        [key: string]: WhitelistInfo;
    } | undefined;
    WhitelistStartTime?: number | undefined;
    WhitelistEndTime?: number | undefined;
    StartTime?: number | undefined;
    EndTime?: number | undefined;
}
export declare enum ConfigITOContract_EnumITOStatus {
    DefaultITO = 0,
    ActiveITO = 1,
    PausedITO = 2,
    UNRECOGNIZED = -1
}
export declare function configITOContract_EnumITOStatusFromJSON(object: any): ConfigITOContract_EnumITOStatus;
export declare function configITOContract_EnumITOStatusToJSON(object: ConfigITOContract_EnumITOStatus): number;
export interface ConfigITOContract_PackInfoEntry {
    key: string;
    value?: PackInfo | undefined;
}
export interface ConfigITOContract_WhitelistInfoEntry {
    key: string;
    value?: WhitelistInfo | undefined;
}
export interface WhitelistInfo {
    Limit?: number | undefined;
}
/** SetITOPrices holds the data for a ConfigITO transaction */
export interface SetITOPricesContract {
    AssetID?: Uint8Array | undefined;
    PackInfo?: {
        [key: string]: PackInfo;
    } | undefined;
}
export interface SetITOPricesContract_PackInfoEntry {
    key: string;
    value?: PackInfo | undefined;
}
/** ITOTriggerContract triggers assets functions */
export interface ITOTriggerContract {
    TriggerType?: ITOTriggerContract_EnumITOTriggerType | undefined;
    AssetID?: Uint8Array | undefined;
    ReceiverAddress?: Uint8Array | undefined;
    Status?: ITOTriggerContract_EnumITOStatus | undefined;
    MaxAmount?: number | undefined;
    PackInfo?: {
        [key: string]: PackInfo;
    } | undefined;
    DefaultLimitPerAddress?: number | undefined;
    WhitelistStatus?: ITOTriggerContract_EnumITOStatus | undefined;
    WhitelistInfo?: {
        [key: string]: WhitelistInfo;
    } | undefined;
    WhitelistStartTime?: number | undefined;
    WhitelistEndTime?: number | undefined;
    StartTime?: number | undefined;
    EndTime?: number | undefined;
}
export declare enum ITOTriggerContract_EnumITOTriggerType {
    SetITOPrices = 0,
    UpdateStatus = 1,
    UpdateReceiverAddress = 2,
    UpdateMaxAmount = 3,
    UpdateDefaultLimitPerAddress = 4,
    UpdateTimes = 5,
    UpdateWhitelistStatus = 6,
    AddToWhitelist = 7,
    RemoveFromWhitelist = 8,
    UpdateWhitelistTimes = 9,
    UNRECOGNIZED = -1
}
export declare function iTOTriggerContract_EnumITOTriggerTypeFromJSON(object: any): ITOTriggerContract_EnumITOTriggerType;
export declare function iTOTriggerContract_EnumITOTriggerTypeToJSON(object: ITOTriggerContract_EnumITOTriggerType): number;
export declare enum ITOTriggerContract_EnumITOStatus {
    DefaultITO = 0,
    ActiveITO = 1,
    PausedITO = 2,
    UNRECOGNIZED = -1
}
export declare function iTOTriggerContract_EnumITOStatusFromJSON(object: any): ITOTriggerContract_EnumITOStatus;
export declare function iTOTriggerContract_EnumITOStatusToJSON(object: ITOTriggerContract_EnumITOStatus): number;
export interface ITOTriggerContract_PackInfoEntry {
    key: string;
    value?: PackInfo | undefined;
}
export interface ITOTriggerContract_WhitelistInfoEntry {
    key: string;
    value?: WhitelistInfo | undefined;
}
/** PackInfo holds the pack list structure for the ITO contract */
export interface PackInfo {
    Packs?: PackItem[] | undefined;
}
/** PackItem hold the pack structure for the ITO contract */
export interface PackItem {
    Amount?: number | undefined;
    Price?: number | undefined;
}
/** BuyContract holds the data for a buy transaction */
export interface BuyContract {
    BuyType?: BuyContract_EnumBuyType | undefined;
    ID?: Uint8Array | undefined;
    CurrencyID?: Uint8Array | undefined;
    Amount?: number | undefined;
    CurrencyAmount?: number | undefined;
}
export declare enum BuyContract_EnumBuyType {
    ITOBuy = 0,
    MarketBuy = 1,
    UNRECOGNIZED = -1
}
export declare function buyContract_EnumBuyTypeFromJSON(object: any): BuyContract_EnumBuyType;
export declare function buyContract_EnumBuyTypeToJSON(object: BuyContract_EnumBuyType): number;
/** SellContract holds the data for a sell transaction */
export interface SellContract {
    MarketType?: SellContract_EnumMarketType | undefined;
    MarketplaceID?: Uint8Array | undefined;
    AssetID?: Uint8Array | undefined;
    CurrencyID?: Uint8Array | undefined;
    Price?: number | undefined;
    ReservePrice?: number | undefined;
    EndTime?: number | undefined;
}
export declare enum SellContract_EnumMarketType {
    BuyItNowMarket = 0,
    AuctionMarket = 1,
    UNRECOGNIZED = -1
}
export declare function sellContract_EnumMarketTypeFromJSON(object: any): SellContract_EnumMarketType;
export declare function sellContract_EnumMarketTypeToJSON(object: SellContract_EnumMarketType): number;
/** CancelMarketOrderContract holds the data for a cancel market transaction */
export interface CancelMarketOrderContract {
    OrderID?: Uint8Array | undefined;
}
/** CreateMarketplaceContract holds the data for a create marketplace transaction */
export interface CreateMarketplaceContract {
    Name?: Uint8Array | undefined;
    ReferralAddress?: Uint8Array | undefined;
    ReferralPercentage?: number | undefined;
}
/** ConfigMarketplaceContract holds the data for a config marketplace transaction */
export interface ConfigMarketplaceContract {
    MarketplaceID?: Uint8Array | undefined;
    Name?: Uint8Array | undefined;
    ReferralAddress?: Uint8Array | undefined;
    ReferralPercentage?: number | undefined;
}
export interface AccKey {
    address?: Uint8Array | undefined;
    weight?: number | undefined;
}
export interface AccPermission {
    Type?: AccPermission_AccPermissionType | undefined;
    PermissionName?: string | undefined;
    Threshold?: number | undefined;
    /** 1 bit 1 contract */
    Operations?: Uint8Array | undefined;
    Signers?: AccKey[] | undefined;
}
export declare enum AccPermission_AccPermissionType {
    Owner = 0,
    User = 1,
    UNRECOGNIZED = -1
}
export declare function accPermission_AccPermissionTypeFromJSON(object: any): AccPermission_AccPermissionType;
export declare function accPermission_AccPermissionTypeToJSON(object: AccPermission_AccPermissionType): number;
/** UpdateAccountPermissionContract holds the data for update account permission transaction */
export interface UpdateAccountPermissionContract {
    Permissions?: AccPermission[] | undefined;
}
/** DepositContract holds the data for a deposit transaction */
export interface DepositContract {
    DepositType?: DepositContract_EnumDepositType | undefined;
    ID?: Uint8Array | undefined;
    CurrencyID?: Uint8Array | undefined;
    Amount?: number | undefined;
}
export declare enum DepositContract_EnumDepositType {
    FPRDeposit = 0,
    KDAPool = 1,
    UNRECOGNIZED = -1
}
export declare function depositContract_EnumDepositTypeFromJSON(object: any): DepositContract_EnumDepositType;
export declare function depositContract_EnumDepositTypeToJSON(object: DepositContract_EnumDepositType): number;
export interface CallValue {
    Amount?: number | undefined;
    KDARoyalties?: number | undefined;
    KLVRoyalties?: number | undefined;
}
export interface SmartContract {
    Type?: SmartContract_SCType | undefined;
    Address?: Uint8Array | undefined;
    /**
     * SmartContract CallValue is represented by a map of currencyID and amount
     *  should be limited to 50 currencies
     */
    CallValue?: {
        [key: string]: CallValue;
    } | undefined;
}
export declare enum SmartContract_SCType {
    SCInvoke = 0,
    SCDeploy = 1,
    UNRECOGNIZED = -1
}
export declare function smartContract_SCTypeFromJSON(object: any): SmartContract_SCType;
export declare function smartContract_SCTypeToJSON(object: SmartContract_SCType): number;
export interface SmartContract_CallValueEntry {
    key: string;
    value?: CallValue | undefined;
}
export declare const TransferContract: MessageFns<TransferContract>;
export declare const CreateAssetContract: MessageFns<CreateAssetContract>;
export declare const CreateAssetContract_URIsEntry: MessageFns<CreateAssetContract_URIsEntry>;
export declare const PropertiesInfo: MessageFns<PropertiesInfo>;
export declare const AttributesInfo: MessageFns<AttributesInfo>;
export declare const StakingInfo: MessageFns<StakingInfo>;
export declare const RolesInfo: MessageFns<RolesInfo>;
export declare const RoyaltiesInfo: MessageFns<RoyaltiesInfo>;
export declare const RoyaltiesInfo_SplitRoyaltiesEntry: MessageFns<RoyaltiesInfo_SplitRoyaltiesEntry>;
export declare const RoyaltySplitInfo: MessageFns<RoyaltySplitInfo>;
export declare const RoyaltyInfo: MessageFns<RoyaltyInfo>;
export declare const KDAPoolInfo: MessageFns<KDAPoolInfo>;
export declare const AssetTriggerContract: MessageFns<AssetTriggerContract>;
export declare const AssetTriggerContract_URIsEntry: MessageFns<AssetTriggerContract_URIsEntry>;
export declare const ValidatorConfig: MessageFns<ValidatorConfig>;
export declare const ValidatorConfig_URIsEntry: MessageFns<ValidatorConfig_URIsEntry>;
export declare const CreateValidatorContract: MessageFns<CreateValidatorContract>;
export declare const ValidatorConfigContract: MessageFns<ValidatorConfigContract>;
export declare const FreezeContract: MessageFns<FreezeContract>;
export declare const UnfreezeContract: MessageFns<UnfreezeContract>;
export declare const DelegateContract: MessageFns<DelegateContract>;
export declare const UndelegateContract: MessageFns<UndelegateContract>;
export declare const WithdrawContract: MessageFns<WithdrawContract>;
export declare const ClaimContract: MessageFns<ClaimContract>;
export declare const UnjailContract: MessageFns<UnjailContract>;
export declare const SetAccountNameContract: MessageFns<SetAccountNameContract>;
export declare const ProposalContract: MessageFns<ProposalContract>;
export declare const ProposalContract_ParametersEntry: MessageFns<ProposalContract_ParametersEntry>;
export declare const VoteContract: MessageFns<VoteContract>;
export declare const ConfigITOContract: MessageFns<ConfigITOContract>;
export declare const ConfigITOContract_PackInfoEntry: MessageFns<ConfigITOContract_PackInfoEntry>;
export declare const ConfigITOContract_WhitelistInfoEntry: MessageFns<ConfigITOContract_WhitelistInfoEntry>;
export declare const WhitelistInfo: MessageFns<WhitelistInfo>;
export declare const SetITOPricesContract: MessageFns<SetITOPricesContract>;
export declare const SetITOPricesContract_PackInfoEntry: MessageFns<SetITOPricesContract_PackInfoEntry>;
export declare const ITOTriggerContract: MessageFns<ITOTriggerContract>;
export declare const ITOTriggerContract_PackInfoEntry: MessageFns<ITOTriggerContract_PackInfoEntry>;
export declare const ITOTriggerContract_WhitelistInfoEntry: MessageFns<ITOTriggerContract_WhitelistInfoEntry>;
export declare const PackInfo: MessageFns<PackInfo>;
export declare const PackItem: MessageFns<PackItem>;
export declare const BuyContract: MessageFns<BuyContract>;
export declare const SellContract: MessageFns<SellContract>;
export declare const CancelMarketOrderContract: MessageFns<CancelMarketOrderContract>;
export declare const CreateMarketplaceContract: MessageFns<CreateMarketplaceContract>;
export declare const ConfigMarketplaceContract: MessageFns<ConfigMarketplaceContract>;
export declare const AccKey: MessageFns<AccKey>;
export declare const AccPermission: MessageFns<AccPermission>;
export declare const UpdateAccountPermissionContract: MessageFns<UpdateAccountPermissionContract>;
export declare const DepositContract: MessageFns<DepositContract>;
export declare const CallValue: MessageFns<CallValue>;
export declare const SmartContract: MessageFns<SmartContract>;
export declare const SmartContract_CallValueEntry: MessageFns<SmartContract_CallValueEntry>;
type ProtoMetaMessageOptions = {
    options?: {
        [key: string]: any;
    };
    fields?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    oneof?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    nested?: {
        [key: string]: ProtoMetaMessageOptions;
    };
};
export interface ProtoMetadata {
    fileDescriptor: FileDescriptorProto;
    references: {
        [key: string]: any;
    };
    dependencies?: ProtoMetadata[];
    options?: {
        options?: {
            [key: string]: any;
        };
        services?: {
            [key: string]: {
                options?: {
                    [key: string]: any;
                };
                methods?: {
                    [key: string]: {
                        [key: string]: any;
                    };
                };
            };
        };
        messages?: {
            [key: string]: ProtoMetaMessageOptions;
        };
        enums?: {
            [key: string]: {
                options?: {
                    [key: string]: any;
                };
                values?: {
                    [key: string]: {
                        [key: string]: any;
                    };
                };
            };
        };
    };
}
export declare const protoMetadata: ProtoMetadata;
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & {
    [K in Exclude<keyof I, KeysOfUnion<P>>]: never;
};
export interface MessageFns<T> {
    encode(message: T, writer?: BinaryWriter): BinaryWriter;
    decode(input: BinaryReader | Uint8Array, length?: number): T;
    fromJSON(object: any): T;
    toJSON(message: T): unknown;
    create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;
    fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;
}
export {};
