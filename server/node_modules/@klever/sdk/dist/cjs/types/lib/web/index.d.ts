import { IBroadcastResponse, IContractRequest, ITxOptionsRequest } from "@klever/kleverweb/dist/types/dtos";
import { IProvider, ITransaction } from "..";
declare const web: {
    isKleverWebLoaded: () => boolean;
    isKleverWebActive: () => boolean;
    broadcastTransactions: (transactions: ITransaction[]) => Promise<IBroadcastResponse>;
    signMessage: (message: string, privateKey: string) => Promise<string>;
    signTransaction: (tx: ITransaction) => Promise<ITransaction>;
    validateSignature: (message: string, signature: string, publicKey: string) => Promise<boolean>;
    buildTransaction: (contracts: IContractRequest[], txData?: string[] | undefined, options?: ITxOptionsRequest | undefined) => Promise<ITransaction>;
    initialize: () => Promise<void>;
    getWalletAddress: () => string;
    getProvider: () => IProvider;
    setProvider: (pvd: IProvider) => void;
};
export default web;
