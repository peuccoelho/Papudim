import { IBroadcastResponse, IContractRequest, ITransaction, ITxOptionsRequest } from "@klever/kleverweb/dist/types/dtos";
import { IAccountInfo } from "../types/dtos";
declare class Account {
    private privateKey;
    private address;
    private balance;
    private nonce;
    ready: Promise<void>;
    constructor(privateKey?: string);
    private init;
    getBalance(): number;
    getNonce(): number;
    getAddress(): string;
    sync(): Promise<void>;
    getInfo(): Promise<IAccountInfo>;
    buildTransaction: (contracts: IContractRequest[], txData?: string[] | undefined, options?: ITxOptionsRequest | undefined) => Promise<ITransaction>;
    signMessage: (message: string) => Promise<string>;
    signTransaction: (tx: ITransaction) => Promise<ITransaction>;
    quickSend: (contracts: IContractRequest[], txData?: string[] | undefined, options?: ITxOptionsRequest | undefined) => Promise<IBroadcastResponse>;
    downloadAsPem: (path?: string | undefined) => Promise<void>;
    validateSignature: (message: string, signature: string) => Promise<boolean>;
    broadcastTransactions: (txs: string[] | ITransaction[]) => Promise<IBroadcastResponse>;
}
export default Account;
