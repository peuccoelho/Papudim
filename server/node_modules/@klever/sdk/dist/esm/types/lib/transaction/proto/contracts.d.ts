import _m0 from "protobufjs/minimal";
import { FileDescriptorProto } from "ts-proto-descriptors";
export declare const protobufPackage = "proto";
/** TXContract available */
export interface TransferContract {
    ToAddress?: Uint8Array;
    AssetID?: Uint8Array;
    Amount?: number;
}
/** CreateAssetContract holds the data for a Klever digital asset */
export interface CreateAssetContract {
    Type?: CreateAssetContract_EnumAssetType;
    Name?: Uint8Array;
    Ticker?: Uint8Array;
    OwnerAddress?: Uint8Array;
    Logo?: string;
    URIs?: {
        [key: string]: string;
    };
    Precision?: number;
    InitialSupply?: number;
    MaxSupply?: number;
    Royalties?: RoyaltiesInfo;
    Properties?: PropertiesInfo;
    Attributes?: AttributesInfo;
    Staking?: StakingInfo;
    Roles?: RolesInfo[];
}
export declare enum CreateAssetContract_EnumAssetType {
    Fungible = 0,
    NonFungible = 1,
    UNRECOGNIZED = -1
}
export declare function createAssetContract_EnumAssetTypeFromJSON(object: any): CreateAssetContract_EnumAssetType;
export declare function createAssetContract_EnumAssetTypeToJSON(object: CreateAssetContract_EnumAssetType): number;
export interface CreateAssetContract_URIsEntry {
    key: string;
    value: string;
}
/** PropertiesInfo hold the properties structure for the KDA asset */
export interface PropertiesInfo {
    CanFreeze?: boolean;
    CanWipe?: boolean;
    CanPause?: boolean;
    CanMint?: boolean;
    CanBurn?: boolean;
    CanChangeOwner?: boolean;
    CanAddRoles?: boolean;
}
/** AttributesInfo hold the attributes structure for the KDA asset */
export interface AttributesInfo {
    IsPaused?: boolean;
    IsNFTMintStopped?: boolean;
}
/** StakingInfo hold the staking structure for the KDA asset */
export interface StakingInfo {
    Type?: StakingInfo_InterestType;
    APR?: number;
    MinEpochsToClaim?: number;
    MinEpochsToUnstake?: number;
    MinEpochsToWithdraw?: number;
}
export declare enum StakingInfo_InterestType {
    APRI = 0,
    FPRI = 1,
    UNRECOGNIZED = -1
}
export declare function stakingInfo_InterestTypeFromJSON(object: any): StakingInfo_InterestType;
export declare function stakingInfo_InterestTypeToJSON(object: StakingInfo_InterestType): number;
/** RolesInfo holds the roles for a given asset and the given address */
export interface RolesInfo {
    Address?: Uint8Array;
    HasRoleMint?: boolean;
    HasRoleSetITOPrices?: boolean;
}
/** RoyaltiesInfo holds the royalties for a given asset */
export interface RoyaltiesInfo {
    Address?: Uint8Array;
    TransferPercentage?: RoyaltyInfo[];
    TransferFixed?: number;
    MarketPercentage?: number;
    MarketFixed?: number;
}
/** RoyaltyInfo holds the royalty threshold */
export interface RoyaltyInfo {
    Amount?: number;
    Percentage?: number;
}
/** AssetTriggerContract triggers assets functions */
export interface AssetTriggerContract {
    TriggerType?: AssetTriggerContract_EnumTriggerType;
    AssetID?: Uint8Array;
    ToAddress?: Uint8Array;
    Amount?: number;
    MIME?: Uint8Array;
    Logo?: string;
    URIs?: {
        [key: string]: string;
    };
    Role?: RolesInfo;
    Staking?: StakingInfo;
}
export declare enum AssetTriggerContract_EnumTriggerType {
    Mint = 0,
    Burn = 1,
    Wipe = 2,
    Pause = 3,
    Resume = 4,
    ChangeOwner = 5,
    AddRole = 6,
    RemoveRole = 7,
    UpdateMetadata = 8,
    StopNFTMint = 9,
    UpdateLogo = 10,
    UpdateURIs = 11,
    ChangeRoyaltiesReceiver = 12,
    UpdateStaking = 13,
    UNRECOGNIZED = -1
}
export declare function assetTriggerContract_EnumTriggerTypeFromJSON(object: any): AssetTriggerContract_EnumTriggerType;
export declare function assetTriggerContract_EnumTriggerTypeToJSON(object: AssetTriggerContract_EnumTriggerType): number;
export interface AssetTriggerContract_URIsEntry {
    key: string;
    value: string;
}
/** ValidatorConfig holds the data for a validator configuration */
export interface ValidatorConfig {
    BLSPublicKey?: Uint8Array;
    RewardAddress?: Uint8Array;
    CanDelegate?: boolean;
    Commission?: number;
    MaxDelegationAmount?: number;
    Logo?: string;
    URIs?: {
        [key: string]: string;
    };
    Name?: string;
}
export interface ValidatorConfig_URIsEntry {
    key: string;
    value: string;
}
/** CreateValidatorContract holds the data for create a validator */
export interface CreateValidatorContract {
    OwnerAddress?: Uint8Array;
    Config?: ValidatorConfig;
}
/** ValidatorConfigContract holds the data for a validator configuration transaction */
export interface ValidatorConfigContract {
    Config?: ValidatorConfig;
}
/** FreezeContract holds the data for a freeze transaction */
export interface FreezeContract {
    AssetID?: Uint8Array;
    Amount?: number;
}
/** UnfreezeContract holds the data for a unfreeze transaction */
export interface UnfreezeContract {
    AssetID?: Uint8Array;
    BucketID?: Uint8Array;
}
/** DelegateContract holds the data for a delegate transaction */
export interface DelegateContract {
    ToAddress?: Uint8Array;
    BucketID?: Uint8Array;
}
/** UndelegateContract holds the data for a undelegate transaction */
export interface UndelegateContract {
    BucketID?: Uint8Array;
}
/** WithdrawContract holds the data for a withdraw transaction */
export interface WithdrawContract {
    AssetID?: Uint8Array;
}
/** ClaimContract holds the data for a claim transaction */
export interface ClaimContract {
    ClaimType?: ClaimContract_EnumClaimType;
    ID?: Uint8Array;
}
export declare enum ClaimContract_EnumClaimType {
    StakingClaim = 0,
    AllowanceClaim = 1,
    MarketClaim = 2,
    UNRECOGNIZED = -1
}
export declare function claimContract_EnumClaimTypeFromJSON(object: any): ClaimContract_EnumClaimType;
export declare function claimContract_EnumClaimTypeToJSON(object: ClaimContract_EnumClaimType): number;
/** UnjailContract holds the data for a unjail transaction */
export interface UnjailContract {
}
/** SetAccountNameContract holds the data for a setAccountName transaction */
export interface SetAccountNameContract {
    Name?: Uint8Array;
}
/** ProposalContract holds the data for a proposal transaction */
export interface ProposalContract {
    Parameters?: {
        [key: number]: Uint8Array;
    };
    Description?: Uint8Array;
    EpochsDuration?: number;
}
export interface ProposalContract_ParametersEntry {
    key: number;
    value: Uint8Array;
}
/** VoteContract holds the data for a vote transaction */
export interface VoteContract {
    ProposalID?: number;
    Amount?: number;
    Type?: VoteContract_EnumVoteType;
}
export declare enum VoteContract_EnumVoteType {
    Yes = 0,
    No = 1,
    UNRECOGNIZED = -1
}
export declare function voteContract_EnumVoteTypeFromJSON(object: any): VoteContract_EnumVoteType;
export declare function voteContract_EnumVoteTypeToJSON(object: VoteContract_EnumVoteType): number;
/** ConfigITOContract holds the data for a ConfigITO transaction */
export interface ConfigITOContract {
    AssetID?: Uint8Array;
    ReceiverAddress?: Uint8Array;
    Status?: ConfigITOContract_EnumITOStatus;
    MaxAmount?: number;
    PackInfo?: {
        [key: string]: PackInfo;
    };
}
export declare enum ConfigITOContract_EnumITOStatus {
    DefaultITO = 0,
    ActiveITO = 1,
    PausedITO = 2,
    UNRECOGNIZED = -1
}
export declare function configITOContract_EnumITOStatusFromJSON(object: any): ConfigITOContract_EnumITOStatus;
export declare function configITOContract_EnumITOStatusToJSON(object: ConfigITOContract_EnumITOStatus): number;
export interface ConfigITOContract_PackInfoEntry {
    key: string;
    value?: PackInfo;
}
/** SetITOPrices holds the data for a ConfigITO transaction */
export interface SetITOPricesContract {
    AssetID?: Uint8Array;
    PackInfo?: {
        [key: string]: PackInfo;
    };
}
export interface SetITOPricesContract_PackInfoEntry {
    key: string;
    value?: PackInfo;
}
/** PackInfo holds the pack list structure for the ITO contract */
export interface PackInfo {
    Packs?: PackItem[];
}
/** PackItem hold the pack structure for the ITO contract */
export interface PackItem {
    Amount?: number;
    Price?: number;
}
/** BuyContract holds the data for a buy transaction */
export interface BuyContract {
    BuyType?: BuyContract_EnumBuyType;
    ID?: Uint8Array;
    CurrencyID?: Uint8Array;
    Amount?: number;
}
export declare enum BuyContract_EnumBuyType {
    ITOBuy = 0,
    MarketBuy = 1,
    UNRECOGNIZED = -1
}
export declare function buyContract_EnumBuyTypeFromJSON(object: any): BuyContract_EnumBuyType;
export declare function buyContract_EnumBuyTypeToJSON(object: BuyContract_EnumBuyType): number;
/** SellContract holds the data for a sell transaction */
export interface SellContract {
    MarketType?: SellContract_EnumMarketType;
    MarketplaceID?: Uint8Array;
    AssetID?: Uint8Array;
    CurrencyID?: Uint8Array;
    Price?: number;
    ReservePrice?: number;
    EndTime?: number;
}
export declare enum SellContract_EnumMarketType {
    BuyItNowMarket = 0,
    AuctionMarket = 1,
    UNRECOGNIZED = -1
}
export declare function sellContract_EnumMarketTypeFromJSON(object: any): SellContract_EnumMarketType;
export declare function sellContract_EnumMarketTypeToJSON(object: SellContract_EnumMarketType): number;
/** CancelMarketOrderContract holds the data for a cancel market transaction */
export interface CancelMarketOrderContract {
    OrderID?: Uint8Array;
}
/** CreateMarketplaceContract holds the data for a create marketplace transaction */
export interface CreateMarketplaceContract {
    Name?: Uint8Array;
    ReferralAddress?: Uint8Array;
    ReferralPercentage?: number;
}
/** ConfigMarketplaceContract holds the data for a config marketplace transaction */
export interface ConfigMarketplaceContract {
    MarketplaceID?: Uint8Array;
    Name?: Uint8Array;
    ReferralAddress?: Uint8Array;
    ReferralPercentage?: number;
}
/** TODO: Reuse from account */
export interface AccKey {
    address?: Uint8Array;
    weight?: number;
}
export interface AccPermission {
    Type?: AccPermission_AccPermissionType;
    PermissionName?: string;
    Threshold?: number;
    Operations?: Uint8Array;
    Signers?: AccKey[];
}
export declare enum AccPermission_AccPermissionType {
    Owner = 0,
    User = 1,
    UNRECOGNIZED = -1
}
export declare function accPermission_AccPermissionTypeFromJSON(object: any): AccPermission_AccPermissionType;
export declare function accPermission_AccPermissionTypeToJSON(object: AccPermission_AccPermissionType): number;
/** UpdateAccountPermissionContract holds the data for update account permission transaction */
export interface UpdateAccountPermissionContract {
    Permissions?: AccPermission[];
}
export declare const TransferContract: {
    encode(message: TransferContract, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): TransferContract;
    fromJSON(object: any): TransferContract;
    toJSON(message: TransferContract): unknown;
    fromPartial<I extends {
        ToAddress?: Uint8Array | undefined;
        AssetID?: Uint8Array | undefined;
        Amount?: number | undefined;
    } & {
        ToAddress?: Uint8Array | undefined;
        AssetID?: Uint8Array | undefined;
        Amount?: number | undefined;
    } & { [K in Exclude<keyof I, keyof TransferContract>]: never; }>(object: I): TransferContract;
};
export declare const CreateAssetContract: {
    encode(message: CreateAssetContract, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): CreateAssetContract;
    fromJSON(object: any): CreateAssetContract;
    toJSON(message: CreateAssetContract): unknown;
    fromPartial<I extends {
        Type?: CreateAssetContract_EnumAssetType | undefined;
        Name?: Uint8Array | undefined;
        Ticker?: Uint8Array | undefined;
        OwnerAddress?: Uint8Array | undefined;
        Logo?: string | undefined;
        URIs?: {
            [x: string]: string | undefined;
        } | undefined;
        Precision?: number | undefined;
        InitialSupply?: number | undefined;
        MaxSupply?: number | undefined;
        Royalties?: {
            Address?: Uint8Array | undefined;
            TransferPercentage?: {
                Amount?: number | undefined;
                Percentage?: number | undefined;
            }[] | undefined;
            TransferFixed?: number | undefined;
            MarketPercentage?: number | undefined;
            MarketFixed?: number | undefined;
        } | undefined;
        Properties?: {
            CanFreeze?: boolean | undefined;
            CanWipe?: boolean | undefined;
            CanPause?: boolean | undefined;
            CanMint?: boolean | undefined;
            CanBurn?: boolean | undefined;
            CanChangeOwner?: boolean | undefined;
            CanAddRoles?: boolean | undefined;
        } | undefined;
        Attributes?: {
            IsPaused?: boolean | undefined;
            IsNFTMintStopped?: boolean | undefined;
        } | undefined;
        Staking?: {
            Type?: StakingInfo_InterestType | undefined;
            APR?: number | undefined;
            MinEpochsToClaim?: number | undefined;
            MinEpochsToUnstake?: number | undefined;
            MinEpochsToWithdraw?: number | undefined;
        } | undefined;
        Roles?: {
            Address?: Uint8Array | undefined;
            HasRoleMint?: boolean | undefined;
            HasRoleSetITOPrices?: boolean | undefined;
        }[] | undefined;
    } & {
        Type?: CreateAssetContract_EnumAssetType | undefined;
        Name?: Uint8Array | undefined;
        Ticker?: Uint8Array | undefined;
        OwnerAddress?: Uint8Array | undefined;
        Logo?: string | undefined;
        URIs?: ({
            [x: string]: string | undefined;
        } & {
            [x: string]: string | undefined;
        } & { [K in Exclude<keyof I["URIs"], string | number>]: never; }) | undefined;
        Precision?: number | undefined;
        InitialSupply?: number | undefined;
        MaxSupply?: number | undefined;
        Royalties?: ({
            Address?: Uint8Array | undefined;
            TransferPercentage?: {
                Amount?: number | undefined;
                Percentage?: number | undefined;
            }[] | undefined;
            TransferFixed?: number | undefined;
            MarketPercentage?: number | undefined;
            MarketFixed?: number | undefined;
        } & {
            Address?: Uint8Array | undefined;
            TransferPercentage?: ({
                Amount?: number | undefined;
                Percentage?: number | undefined;
            }[] & ({
                Amount?: number | undefined;
                Percentage?: number | undefined;
            } & {
                Amount?: number | undefined;
                Percentage?: number | undefined;
            } & { [K_1 in Exclude<keyof I["Royalties"]["TransferPercentage"][number], keyof RoyaltyInfo>]: never; })[] & { [K_2 in Exclude<keyof I["Royalties"]["TransferPercentage"], keyof {
                Amount?: number | undefined;
                Percentage?: number | undefined;
            }[]>]: never; }) | undefined;
            TransferFixed?: number | undefined;
            MarketPercentage?: number | undefined;
            MarketFixed?: number | undefined;
        } & { [K_3 in Exclude<keyof I["Royalties"], keyof RoyaltiesInfo>]: never; }) | undefined;
        Properties?: ({
            CanFreeze?: boolean | undefined;
            CanWipe?: boolean | undefined;
            CanPause?: boolean | undefined;
            CanMint?: boolean | undefined;
            CanBurn?: boolean | undefined;
            CanChangeOwner?: boolean | undefined;
            CanAddRoles?: boolean | undefined;
        } & {
            CanFreeze?: boolean | undefined;
            CanWipe?: boolean | undefined;
            CanPause?: boolean | undefined;
            CanMint?: boolean | undefined;
            CanBurn?: boolean | undefined;
            CanChangeOwner?: boolean | undefined;
            CanAddRoles?: boolean | undefined;
        } & { [K_4 in Exclude<keyof I["Properties"], keyof PropertiesInfo>]: never; }) | undefined;
        Attributes?: ({
            IsPaused?: boolean | undefined;
            IsNFTMintStopped?: boolean | undefined;
        } & {
            IsPaused?: boolean | undefined;
            IsNFTMintStopped?: boolean | undefined;
        } & { [K_5 in Exclude<keyof I["Attributes"], keyof AttributesInfo>]: never; }) | undefined;
        Staking?: ({
            Type?: StakingInfo_InterestType | undefined;
            APR?: number | undefined;
            MinEpochsToClaim?: number | undefined;
            MinEpochsToUnstake?: number | undefined;
            MinEpochsToWithdraw?: number | undefined;
        } & {
            Type?: StakingInfo_InterestType | undefined;
            APR?: number | undefined;
            MinEpochsToClaim?: number | undefined;
            MinEpochsToUnstake?: number | undefined;
            MinEpochsToWithdraw?: number | undefined;
        } & { [K_6 in Exclude<keyof I["Staking"], keyof StakingInfo>]: never; }) | undefined;
        Roles?: ({
            Address?: Uint8Array | undefined;
            HasRoleMint?: boolean | undefined;
            HasRoleSetITOPrices?: boolean | undefined;
        }[] & ({
            Address?: Uint8Array | undefined;
            HasRoleMint?: boolean | undefined;
            HasRoleSetITOPrices?: boolean | undefined;
        } & {
            Address?: Uint8Array | undefined;
            HasRoleMint?: boolean | undefined;
            HasRoleSetITOPrices?: boolean | undefined;
        } & { [K_7 in Exclude<keyof I["Roles"][number], keyof RolesInfo>]: never; })[] & { [K_8 in Exclude<keyof I["Roles"], keyof {
            Address?: Uint8Array | undefined;
            HasRoleMint?: boolean | undefined;
            HasRoleSetITOPrices?: boolean | undefined;
        }[]>]: never; }) | undefined;
    } & { [K_9 in Exclude<keyof I, keyof CreateAssetContract>]: never; }>(object: I): CreateAssetContract;
};
export declare const CreateAssetContract_URIsEntry: {
    encode(message: CreateAssetContract_URIsEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): CreateAssetContract_URIsEntry;
    fromJSON(object: any): CreateAssetContract_URIsEntry;
    toJSON(message: CreateAssetContract_URIsEntry): unknown;
    fromPartial<I extends {
        key?: string | undefined;
        value?: string | undefined;
    } & {
        key?: string | undefined;
        value?: string | undefined;
    } & { [K in Exclude<keyof I, keyof CreateAssetContract_URIsEntry>]: never; }>(object: I): CreateAssetContract_URIsEntry;
};
export declare const PropertiesInfo: {
    encode(message: PropertiesInfo, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): PropertiesInfo;
    fromJSON(object: any): PropertiesInfo;
    toJSON(message: PropertiesInfo): unknown;
    fromPartial<I extends {
        CanFreeze?: boolean | undefined;
        CanWipe?: boolean | undefined;
        CanPause?: boolean | undefined;
        CanMint?: boolean | undefined;
        CanBurn?: boolean | undefined;
        CanChangeOwner?: boolean | undefined;
        CanAddRoles?: boolean | undefined;
    } & {
        CanFreeze?: boolean | undefined;
        CanWipe?: boolean | undefined;
        CanPause?: boolean | undefined;
        CanMint?: boolean | undefined;
        CanBurn?: boolean | undefined;
        CanChangeOwner?: boolean | undefined;
        CanAddRoles?: boolean | undefined;
    } & { [K in Exclude<keyof I, keyof PropertiesInfo>]: never; }>(object: I): PropertiesInfo;
};
export declare const AttributesInfo: {
    encode(message: AttributesInfo, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): AttributesInfo;
    fromJSON(object: any): AttributesInfo;
    toJSON(message: AttributesInfo): unknown;
    fromPartial<I extends {
        IsPaused?: boolean | undefined;
        IsNFTMintStopped?: boolean | undefined;
    } & {
        IsPaused?: boolean | undefined;
        IsNFTMintStopped?: boolean | undefined;
    } & { [K in Exclude<keyof I, keyof AttributesInfo>]: never; }>(object: I): AttributesInfo;
};
export declare const StakingInfo: {
    encode(message: StakingInfo, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): StakingInfo;
    fromJSON(object: any): StakingInfo;
    toJSON(message: StakingInfo): unknown;
    fromPartial<I extends {
        Type?: StakingInfo_InterestType | undefined;
        APR?: number | undefined;
        MinEpochsToClaim?: number | undefined;
        MinEpochsToUnstake?: number | undefined;
        MinEpochsToWithdraw?: number | undefined;
    } & {
        Type?: StakingInfo_InterestType | undefined;
        APR?: number | undefined;
        MinEpochsToClaim?: number | undefined;
        MinEpochsToUnstake?: number | undefined;
        MinEpochsToWithdraw?: number | undefined;
    } & { [K in Exclude<keyof I, keyof StakingInfo>]: never; }>(object: I): StakingInfo;
};
export declare const RolesInfo: {
    encode(message: RolesInfo, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): RolesInfo;
    fromJSON(object: any): RolesInfo;
    toJSON(message: RolesInfo): unknown;
    fromPartial<I extends {
        Address?: Uint8Array | undefined;
        HasRoleMint?: boolean | undefined;
        HasRoleSetITOPrices?: boolean | undefined;
    } & {
        Address?: Uint8Array | undefined;
        HasRoleMint?: boolean | undefined;
        HasRoleSetITOPrices?: boolean | undefined;
    } & { [K in Exclude<keyof I, keyof RolesInfo>]: never; }>(object: I): RolesInfo;
};
export declare const RoyaltiesInfo: {
    encode(message: RoyaltiesInfo, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): RoyaltiesInfo;
    fromJSON(object: any): RoyaltiesInfo;
    toJSON(message: RoyaltiesInfo): unknown;
    fromPartial<I extends {
        Address?: Uint8Array | undefined;
        TransferPercentage?: {
            Amount?: number | undefined;
            Percentage?: number | undefined;
        }[] | undefined;
        TransferFixed?: number | undefined;
        MarketPercentage?: number | undefined;
        MarketFixed?: number | undefined;
    } & {
        Address?: Uint8Array | undefined;
        TransferPercentage?: ({
            Amount?: number | undefined;
            Percentage?: number | undefined;
        }[] & ({
            Amount?: number | undefined;
            Percentage?: number | undefined;
        } & {
            Amount?: number | undefined;
            Percentage?: number | undefined;
        } & { [K in Exclude<keyof I["TransferPercentage"][number], keyof RoyaltyInfo>]: never; })[] & { [K_1 in Exclude<keyof I["TransferPercentage"], keyof {
            Amount?: number | undefined;
            Percentage?: number | undefined;
        }[]>]: never; }) | undefined;
        TransferFixed?: number | undefined;
        MarketPercentage?: number | undefined;
        MarketFixed?: number | undefined;
    } & { [K_2 in Exclude<keyof I, keyof RoyaltiesInfo>]: never; }>(object: I): RoyaltiesInfo;
};
export declare const RoyaltyInfo: {
    encode(message: RoyaltyInfo, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): RoyaltyInfo;
    fromJSON(object: any): RoyaltyInfo;
    toJSON(message: RoyaltyInfo): unknown;
    fromPartial<I extends {
        Amount?: number | undefined;
        Percentage?: number | undefined;
    } & {
        Amount?: number | undefined;
        Percentage?: number | undefined;
    } & { [K in Exclude<keyof I, keyof RoyaltyInfo>]: never; }>(object: I): RoyaltyInfo;
};
export declare const AssetTriggerContract: {
    encode(message: AssetTriggerContract, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): AssetTriggerContract;
    fromJSON(object: any): AssetTriggerContract;
    toJSON(message: AssetTriggerContract): unknown;
    fromPartial<I extends {
        TriggerType?: AssetTriggerContract_EnumTriggerType | undefined;
        AssetID?: Uint8Array | undefined;
        ToAddress?: Uint8Array | undefined;
        Amount?: number | undefined;
        MIME?: Uint8Array | undefined;
        Logo?: string | undefined;
        URIs?: {
            [x: string]: string | undefined;
        } | undefined;
        Role?: {
            Address?: Uint8Array | undefined;
            HasRoleMint?: boolean | undefined;
            HasRoleSetITOPrices?: boolean | undefined;
        } | undefined;
        Staking?: {
            Type?: StakingInfo_InterestType | undefined;
            APR?: number | undefined;
            MinEpochsToClaim?: number | undefined;
            MinEpochsToUnstake?: number | undefined;
            MinEpochsToWithdraw?: number | undefined;
        } | undefined;
    } & {
        TriggerType?: AssetTriggerContract_EnumTriggerType | undefined;
        AssetID?: Uint8Array | undefined;
        ToAddress?: Uint8Array | undefined;
        Amount?: number | undefined;
        MIME?: Uint8Array | undefined;
        Logo?: string | undefined;
        URIs?: ({
            [x: string]: string | undefined;
        } & {
            [x: string]: string | undefined;
        } & { [K in Exclude<keyof I["URIs"], string | number>]: never; }) | undefined;
        Role?: ({
            Address?: Uint8Array | undefined;
            HasRoleMint?: boolean | undefined;
            HasRoleSetITOPrices?: boolean | undefined;
        } & {
            Address?: Uint8Array | undefined;
            HasRoleMint?: boolean | undefined;
            HasRoleSetITOPrices?: boolean | undefined;
        } & { [K_1 in Exclude<keyof I["Role"], keyof RolesInfo>]: never; }) | undefined;
        Staking?: ({
            Type?: StakingInfo_InterestType | undefined;
            APR?: number | undefined;
            MinEpochsToClaim?: number | undefined;
            MinEpochsToUnstake?: number | undefined;
            MinEpochsToWithdraw?: number | undefined;
        } & {
            Type?: StakingInfo_InterestType | undefined;
            APR?: number | undefined;
            MinEpochsToClaim?: number | undefined;
            MinEpochsToUnstake?: number | undefined;
            MinEpochsToWithdraw?: number | undefined;
        } & { [K_2 in Exclude<keyof I["Staking"], keyof StakingInfo>]: never; }) | undefined;
    } & { [K_3 in Exclude<keyof I, keyof AssetTriggerContract>]: never; }>(object: I): AssetTriggerContract;
};
export declare const AssetTriggerContract_URIsEntry: {
    encode(message: AssetTriggerContract_URIsEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): AssetTriggerContract_URIsEntry;
    fromJSON(object: any): AssetTriggerContract_URIsEntry;
    toJSON(message: AssetTriggerContract_URIsEntry): unknown;
    fromPartial<I extends {
        key?: string | undefined;
        value?: string | undefined;
    } & {
        key?: string | undefined;
        value?: string | undefined;
    } & { [K in Exclude<keyof I, keyof AssetTriggerContract_URIsEntry>]: never; }>(object: I): AssetTriggerContract_URIsEntry;
};
export declare const ValidatorConfig: {
    encode(message: ValidatorConfig, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ValidatorConfig;
    fromJSON(object: any): ValidatorConfig;
    toJSON(message: ValidatorConfig): unknown;
    fromPartial<I extends {
        BLSPublicKey?: Uint8Array | undefined;
        RewardAddress?: Uint8Array | undefined;
        CanDelegate?: boolean | undefined;
        Commission?: number | undefined;
        MaxDelegationAmount?: number | undefined;
        Logo?: string | undefined;
        URIs?: {
            [x: string]: string | undefined;
        } | undefined;
        Name?: string | undefined;
    } & {
        BLSPublicKey?: Uint8Array | undefined;
        RewardAddress?: Uint8Array | undefined;
        CanDelegate?: boolean | undefined;
        Commission?: number | undefined;
        MaxDelegationAmount?: number | undefined;
        Logo?: string | undefined;
        URIs?: ({
            [x: string]: string | undefined;
        } & {
            [x: string]: string | undefined;
        } & { [K in Exclude<keyof I["URIs"], string | number>]: never; }) | undefined;
        Name?: string | undefined;
    } & { [K_1 in Exclude<keyof I, keyof ValidatorConfig>]: never; }>(object: I): ValidatorConfig;
};
export declare const ValidatorConfig_URIsEntry: {
    encode(message: ValidatorConfig_URIsEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ValidatorConfig_URIsEntry;
    fromJSON(object: any): ValidatorConfig_URIsEntry;
    toJSON(message: ValidatorConfig_URIsEntry): unknown;
    fromPartial<I extends {
        key?: string | undefined;
        value?: string | undefined;
    } & {
        key?: string | undefined;
        value?: string | undefined;
    } & { [K in Exclude<keyof I, keyof ValidatorConfig_URIsEntry>]: never; }>(object: I): ValidatorConfig_URIsEntry;
};
export declare const CreateValidatorContract: {
    encode(message: CreateValidatorContract, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): CreateValidatorContract;
    fromJSON(object: any): CreateValidatorContract;
    toJSON(message: CreateValidatorContract): unknown;
    fromPartial<I extends {
        OwnerAddress?: Uint8Array | undefined;
        Config?: {
            BLSPublicKey?: Uint8Array | undefined;
            RewardAddress?: Uint8Array | undefined;
            CanDelegate?: boolean | undefined;
            Commission?: number | undefined;
            MaxDelegationAmount?: number | undefined;
            Logo?: string | undefined;
            URIs?: {
                [x: string]: string | undefined;
            } | undefined;
            Name?: string | undefined;
        } | undefined;
    } & {
        OwnerAddress?: Uint8Array | undefined;
        Config?: ({
            BLSPublicKey?: Uint8Array | undefined;
            RewardAddress?: Uint8Array | undefined;
            CanDelegate?: boolean | undefined;
            Commission?: number | undefined;
            MaxDelegationAmount?: number | undefined;
            Logo?: string | undefined;
            URIs?: {
                [x: string]: string | undefined;
            } | undefined;
            Name?: string | undefined;
        } & {
            BLSPublicKey?: Uint8Array | undefined;
            RewardAddress?: Uint8Array | undefined;
            CanDelegate?: boolean | undefined;
            Commission?: number | undefined;
            MaxDelegationAmount?: number | undefined;
            Logo?: string | undefined;
            URIs?: ({
                [x: string]: string | undefined;
            } & {
                [x: string]: string | undefined;
            } & { [K in Exclude<keyof I["Config"]["URIs"], string | number>]: never; }) | undefined;
            Name?: string | undefined;
        } & { [K_1 in Exclude<keyof I["Config"], keyof ValidatorConfig>]: never; }) | undefined;
    } & { [K_2 in Exclude<keyof I, keyof CreateValidatorContract>]: never; }>(object: I): CreateValidatorContract;
};
export declare const ValidatorConfigContract: {
    encode(message: ValidatorConfigContract, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ValidatorConfigContract;
    fromJSON(object: any): ValidatorConfigContract;
    toJSON(message: ValidatorConfigContract): unknown;
    fromPartial<I extends {
        Config?: {
            BLSPublicKey?: Uint8Array | undefined;
            RewardAddress?: Uint8Array | undefined;
            CanDelegate?: boolean | undefined;
            Commission?: number | undefined;
            MaxDelegationAmount?: number | undefined;
            Logo?: string | undefined;
            URIs?: {
                [x: string]: string | undefined;
            } | undefined;
            Name?: string | undefined;
        } | undefined;
    } & {
        Config?: ({
            BLSPublicKey?: Uint8Array | undefined;
            RewardAddress?: Uint8Array | undefined;
            CanDelegate?: boolean | undefined;
            Commission?: number | undefined;
            MaxDelegationAmount?: number | undefined;
            Logo?: string | undefined;
            URIs?: {
                [x: string]: string | undefined;
            } | undefined;
            Name?: string | undefined;
        } & {
            BLSPublicKey?: Uint8Array | undefined;
            RewardAddress?: Uint8Array | undefined;
            CanDelegate?: boolean | undefined;
            Commission?: number | undefined;
            MaxDelegationAmount?: number | undefined;
            Logo?: string | undefined;
            URIs?: ({
                [x: string]: string | undefined;
            } & {
                [x: string]: string | undefined;
            } & { [K in Exclude<keyof I["Config"]["URIs"], string | number>]: never; }) | undefined;
            Name?: string | undefined;
        } & { [K_1 in Exclude<keyof I["Config"], keyof ValidatorConfig>]: never; }) | undefined;
    } & { [K_2 in Exclude<keyof I, "Config">]: never; }>(object: I): ValidatorConfigContract;
};
export declare const FreezeContract: {
    encode(message: FreezeContract, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): FreezeContract;
    fromJSON(object: any): FreezeContract;
    toJSON(message: FreezeContract): unknown;
    fromPartial<I extends {
        AssetID?: Uint8Array | undefined;
        Amount?: number | undefined;
    } & {
        AssetID?: Uint8Array | undefined;
        Amount?: number | undefined;
    } & { [K in Exclude<keyof I, keyof FreezeContract>]: never; }>(object: I): FreezeContract;
};
export declare const UnfreezeContract: {
    encode(message: UnfreezeContract, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): UnfreezeContract;
    fromJSON(object: any): UnfreezeContract;
    toJSON(message: UnfreezeContract): unknown;
    fromPartial<I extends {
        AssetID?: Uint8Array | undefined;
        BucketID?: Uint8Array | undefined;
    } & {
        AssetID?: Uint8Array | undefined;
        BucketID?: Uint8Array | undefined;
    } & { [K in Exclude<keyof I, keyof UnfreezeContract>]: never; }>(object: I): UnfreezeContract;
};
export declare const DelegateContract: {
    encode(message: DelegateContract, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): DelegateContract;
    fromJSON(object: any): DelegateContract;
    toJSON(message: DelegateContract): unknown;
    fromPartial<I extends {
        ToAddress?: Uint8Array | undefined;
        BucketID?: Uint8Array | undefined;
    } & {
        ToAddress?: Uint8Array | undefined;
        BucketID?: Uint8Array | undefined;
    } & { [K in Exclude<keyof I, keyof DelegateContract>]: never; }>(object: I): DelegateContract;
};
export declare const UndelegateContract: {
    encode(message: UndelegateContract, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): UndelegateContract;
    fromJSON(object: any): UndelegateContract;
    toJSON(message: UndelegateContract): unknown;
    fromPartial<I extends {
        BucketID?: Uint8Array | undefined;
    } & {
        BucketID?: Uint8Array | undefined;
    } & { [K in Exclude<keyof I, "BucketID">]: never; }>(object: I): UndelegateContract;
};
export declare const WithdrawContract: {
    encode(message: WithdrawContract, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): WithdrawContract;
    fromJSON(object: any): WithdrawContract;
    toJSON(message: WithdrawContract): unknown;
    fromPartial<I extends {
        AssetID?: Uint8Array | undefined;
    } & {
        AssetID?: Uint8Array | undefined;
    } & { [K in Exclude<keyof I, "AssetID">]: never; }>(object: I): WithdrawContract;
};
export declare const ClaimContract: {
    encode(message: ClaimContract, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ClaimContract;
    fromJSON(object: any): ClaimContract;
    toJSON(message: ClaimContract): unknown;
    fromPartial<I extends {
        ClaimType?: ClaimContract_EnumClaimType | undefined;
        ID?: Uint8Array | undefined;
    } & {
        ClaimType?: ClaimContract_EnumClaimType | undefined;
        ID?: Uint8Array | undefined;
    } & { [K in Exclude<keyof I, keyof ClaimContract>]: never; }>(object: I): ClaimContract;
};
export declare const UnjailContract: {
    encode(_: UnjailContract, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): UnjailContract;
    fromJSON(_: any): UnjailContract;
    toJSON(_: UnjailContract): unknown;
    fromPartial<I extends {} & {} & { [K in Exclude<keyof I, never>]: never; }>(_: I): UnjailContract;
};
export declare const SetAccountNameContract: {
    encode(message: SetAccountNameContract, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): SetAccountNameContract;
    fromJSON(object: any): SetAccountNameContract;
    toJSON(message: SetAccountNameContract): unknown;
    fromPartial<I extends {
        Name?: Uint8Array | undefined;
    } & {
        Name?: Uint8Array | undefined;
    } & { [K in Exclude<keyof I, "Name">]: never; }>(object: I): SetAccountNameContract;
};
export declare const ProposalContract: {
    encode(message: ProposalContract, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ProposalContract;
    fromJSON(object: any): ProposalContract;
    toJSON(message: ProposalContract): unknown;
    fromPartial<I extends {
        Parameters?: {
            [x: number]: Uint8Array | undefined;
        } | undefined;
        Description?: Uint8Array | undefined;
        EpochsDuration?: number | undefined;
    } & {
        Parameters?: ({
            [x: number]: Uint8Array | undefined;
        } & {
            [x: number]: Uint8Array | undefined;
        } & { [K in Exclude<keyof I["Parameters"], number>]: never; }) | undefined;
        Description?: Uint8Array | undefined;
        EpochsDuration?: number | undefined;
    } & { [K_1 in Exclude<keyof I, keyof ProposalContract>]: never; }>(object: I): ProposalContract;
};
export declare const ProposalContract_ParametersEntry: {
    encode(message: ProposalContract_ParametersEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ProposalContract_ParametersEntry;
    fromJSON(object: any): ProposalContract_ParametersEntry;
    toJSON(message: ProposalContract_ParametersEntry): unknown;
    fromPartial<I extends {
        key?: number | undefined;
        value?: Uint8Array | undefined;
    } & {
        key?: number | undefined;
        value?: Uint8Array | undefined;
    } & { [K in Exclude<keyof I, keyof ProposalContract_ParametersEntry>]: never; }>(object: I): ProposalContract_ParametersEntry;
};
export declare const VoteContract: {
    encode(message: VoteContract, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): VoteContract;
    fromJSON(object: any): VoteContract;
    toJSON(message: VoteContract): unknown;
    fromPartial<I extends {
        ProposalID?: number | undefined;
        Amount?: number | undefined;
        Type?: VoteContract_EnumVoteType | undefined;
    } & {
        ProposalID?: number | undefined;
        Amount?: number | undefined;
        Type?: VoteContract_EnumVoteType | undefined;
    } & { [K in Exclude<keyof I, keyof VoteContract>]: never; }>(object: I): VoteContract;
};
export declare const ConfigITOContract: {
    encode(message: ConfigITOContract, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ConfigITOContract;
    fromJSON(object: any): ConfigITOContract;
    toJSON(message: ConfigITOContract): unknown;
    fromPartial<I extends {
        AssetID?: Uint8Array | undefined;
        ReceiverAddress?: Uint8Array | undefined;
        Status?: ConfigITOContract_EnumITOStatus | undefined;
        MaxAmount?: number | undefined;
        PackInfo?: {
            [x: string]: {
                Packs?: {
                    Amount?: number | undefined;
                    Price?: number | undefined;
                }[] | undefined;
            } | undefined;
        } | undefined;
    } & {
        AssetID?: Uint8Array | undefined;
        ReceiverAddress?: Uint8Array | undefined;
        Status?: ConfigITOContract_EnumITOStatus | undefined;
        MaxAmount?: number | undefined;
        PackInfo?: ({
            [x: string]: {
                Packs?: {
                    Amount?: number | undefined;
                    Price?: number | undefined;
                }[] | undefined;
            } | undefined;
        } & {
            [x: string]: ({
                Packs?: {
                    Amount?: number | undefined;
                    Price?: number | undefined;
                }[] | undefined;
            } & {
                Packs?: ({
                    Amount?: number | undefined;
                    Price?: number | undefined;
                }[] & ({
                    Amount?: number | undefined;
                    Price?: number | undefined;
                } & {
                    Amount?: number | undefined;
                    Price?: number | undefined;
                } & { [K in Exclude<keyof I["PackInfo"][string]["Packs"][number], keyof PackItem>]: never; })[] & { [K_1 in Exclude<keyof I["PackInfo"][string]["Packs"], keyof {
                    Amount?: number | undefined;
                    Price?: number | undefined;
                }[]>]: never; }) | undefined;
            } & { [K_2 in Exclude<keyof I["PackInfo"][string], "Packs">]: never; }) | undefined;
        } & { [K_3 in Exclude<keyof I["PackInfo"], string | number>]: never; }) | undefined;
    } & { [K_4 in Exclude<keyof I, keyof ConfigITOContract>]: never; }>(object: I): ConfigITOContract;
};
export declare const ConfigITOContract_PackInfoEntry: {
    encode(message: ConfigITOContract_PackInfoEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ConfigITOContract_PackInfoEntry;
    fromJSON(object: any): ConfigITOContract_PackInfoEntry;
    toJSON(message: ConfigITOContract_PackInfoEntry): unknown;
    fromPartial<I extends {
        key?: string | undefined;
        value?: {
            Packs?: {
                Amount?: number | undefined;
                Price?: number | undefined;
            }[] | undefined;
        } | undefined;
    } & {
        key?: string | undefined;
        value?: ({
            Packs?: {
                Amount?: number | undefined;
                Price?: number | undefined;
            }[] | undefined;
        } & {
            Packs?: ({
                Amount?: number | undefined;
                Price?: number | undefined;
            }[] & ({
                Amount?: number | undefined;
                Price?: number | undefined;
            } & {
                Amount?: number | undefined;
                Price?: number | undefined;
            } & { [K in Exclude<keyof I["value"]["Packs"][number], keyof PackItem>]: never; })[] & { [K_1 in Exclude<keyof I["value"]["Packs"], keyof {
                Amount?: number | undefined;
                Price?: number | undefined;
            }[]>]: never; }) | undefined;
        } & { [K_2 in Exclude<keyof I["value"], "Packs">]: never; }) | undefined;
    } & { [K_3 in Exclude<keyof I, keyof ConfigITOContract_PackInfoEntry>]: never; }>(object: I): ConfigITOContract_PackInfoEntry;
};
export declare const SetITOPricesContract: {
    encode(message: SetITOPricesContract, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): SetITOPricesContract;
    fromJSON(object: any): SetITOPricesContract;
    toJSON(message: SetITOPricesContract): unknown;
    fromPartial<I extends {
        AssetID?: Uint8Array | undefined;
        PackInfo?: {
            [x: string]: {
                Packs?: {
                    Amount?: number | undefined;
                    Price?: number | undefined;
                }[] | undefined;
            } | undefined;
        } | undefined;
    } & {
        AssetID?: Uint8Array | undefined;
        PackInfo?: ({
            [x: string]: {
                Packs?: {
                    Amount?: number | undefined;
                    Price?: number | undefined;
                }[] | undefined;
            } | undefined;
        } & {
            [x: string]: ({
                Packs?: {
                    Amount?: number | undefined;
                    Price?: number | undefined;
                }[] | undefined;
            } & {
                Packs?: ({
                    Amount?: number | undefined;
                    Price?: number | undefined;
                }[] & ({
                    Amount?: number | undefined;
                    Price?: number | undefined;
                } & {
                    Amount?: number | undefined;
                    Price?: number | undefined;
                } & { [K in Exclude<keyof I["PackInfo"][string]["Packs"][number], keyof PackItem>]: never; })[] & { [K_1 in Exclude<keyof I["PackInfo"][string]["Packs"], keyof {
                    Amount?: number | undefined;
                    Price?: number | undefined;
                }[]>]: never; }) | undefined;
            } & { [K_2 in Exclude<keyof I["PackInfo"][string], "Packs">]: never; }) | undefined;
        } & { [K_3 in Exclude<keyof I["PackInfo"], string | number>]: never; }) | undefined;
    } & { [K_4 in Exclude<keyof I, keyof SetITOPricesContract>]: never; }>(object: I): SetITOPricesContract;
};
export declare const SetITOPricesContract_PackInfoEntry: {
    encode(message: SetITOPricesContract_PackInfoEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): SetITOPricesContract_PackInfoEntry;
    fromJSON(object: any): SetITOPricesContract_PackInfoEntry;
    toJSON(message: SetITOPricesContract_PackInfoEntry): unknown;
    fromPartial<I extends {
        key?: string | undefined;
        value?: {
            Packs?: {
                Amount?: number | undefined;
                Price?: number | undefined;
            }[] | undefined;
        } | undefined;
    } & {
        key?: string | undefined;
        value?: ({
            Packs?: {
                Amount?: number | undefined;
                Price?: number | undefined;
            }[] | undefined;
        } & {
            Packs?: ({
                Amount?: number | undefined;
                Price?: number | undefined;
            }[] & ({
                Amount?: number | undefined;
                Price?: number | undefined;
            } & {
                Amount?: number | undefined;
                Price?: number | undefined;
            } & { [K in Exclude<keyof I["value"]["Packs"][number], keyof PackItem>]: never; })[] & { [K_1 in Exclude<keyof I["value"]["Packs"], keyof {
                Amount?: number | undefined;
                Price?: number | undefined;
            }[]>]: never; }) | undefined;
        } & { [K_2 in Exclude<keyof I["value"], "Packs">]: never; }) | undefined;
    } & { [K_3 in Exclude<keyof I, keyof SetITOPricesContract_PackInfoEntry>]: never; }>(object: I): SetITOPricesContract_PackInfoEntry;
};
export declare const PackInfo: {
    encode(message: PackInfo, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): PackInfo;
    fromJSON(object: any): PackInfo;
    toJSON(message: PackInfo): unknown;
    fromPartial<I extends {
        Packs?: {
            Amount?: number | undefined;
            Price?: number | undefined;
        }[] | undefined;
    } & {
        Packs?: ({
            Amount?: number | undefined;
            Price?: number | undefined;
        }[] & ({
            Amount?: number | undefined;
            Price?: number | undefined;
        } & {
            Amount?: number | undefined;
            Price?: number | undefined;
        } & { [K in Exclude<keyof I["Packs"][number], keyof PackItem>]: never; })[] & { [K_1 in Exclude<keyof I["Packs"], keyof {
            Amount?: number | undefined;
            Price?: number | undefined;
        }[]>]: never; }) | undefined;
    } & { [K_2 in Exclude<keyof I, "Packs">]: never; }>(object: I): PackInfo;
};
export declare const PackItem: {
    encode(message: PackItem, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): PackItem;
    fromJSON(object: any): PackItem;
    toJSON(message: PackItem): unknown;
    fromPartial<I extends {
        Amount?: number | undefined;
        Price?: number | undefined;
    } & {
        Amount?: number | undefined;
        Price?: number | undefined;
    } & { [K in Exclude<keyof I, keyof PackItem>]: never; }>(object: I): PackItem;
};
export declare const BuyContract: {
    encode(message: BuyContract, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): BuyContract;
    fromJSON(object: any): BuyContract;
    toJSON(message: BuyContract): unknown;
    fromPartial<I extends {
        BuyType?: BuyContract_EnumBuyType | undefined;
        ID?: Uint8Array | undefined;
        CurrencyID?: Uint8Array | undefined;
        Amount?: number | undefined;
    } & {
        BuyType?: BuyContract_EnumBuyType | undefined;
        ID?: Uint8Array | undefined;
        CurrencyID?: Uint8Array | undefined;
        Amount?: number | undefined;
    } & { [K in Exclude<keyof I, keyof BuyContract>]: never; }>(object: I): BuyContract;
};
export declare const SellContract: {
    encode(message: SellContract, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): SellContract;
    fromJSON(object: any): SellContract;
    toJSON(message: SellContract): unknown;
    fromPartial<I extends {
        MarketType?: SellContract_EnumMarketType | undefined;
        MarketplaceID?: Uint8Array | undefined;
        AssetID?: Uint8Array | undefined;
        CurrencyID?: Uint8Array | undefined;
        Price?: number | undefined;
        ReservePrice?: number | undefined;
        EndTime?: number | undefined;
    } & {
        MarketType?: SellContract_EnumMarketType | undefined;
        MarketplaceID?: Uint8Array | undefined;
        AssetID?: Uint8Array | undefined;
        CurrencyID?: Uint8Array | undefined;
        Price?: number | undefined;
        ReservePrice?: number | undefined;
        EndTime?: number | undefined;
    } & { [K in Exclude<keyof I, keyof SellContract>]: never; }>(object: I): SellContract;
};
export declare const CancelMarketOrderContract: {
    encode(message: CancelMarketOrderContract, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): CancelMarketOrderContract;
    fromJSON(object: any): CancelMarketOrderContract;
    toJSON(message: CancelMarketOrderContract): unknown;
    fromPartial<I extends {
        OrderID?: Uint8Array | undefined;
    } & {
        OrderID?: Uint8Array | undefined;
    } & { [K in Exclude<keyof I, "OrderID">]: never; }>(object: I): CancelMarketOrderContract;
};
export declare const CreateMarketplaceContract: {
    encode(message: CreateMarketplaceContract, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): CreateMarketplaceContract;
    fromJSON(object: any): CreateMarketplaceContract;
    toJSON(message: CreateMarketplaceContract): unknown;
    fromPartial<I extends {
        Name?: Uint8Array | undefined;
        ReferralAddress?: Uint8Array | undefined;
        ReferralPercentage?: number | undefined;
    } & {
        Name?: Uint8Array | undefined;
        ReferralAddress?: Uint8Array | undefined;
        ReferralPercentage?: number | undefined;
    } & { [K in Exclude<keyof I, keyof CreateMarketplaceContract>]: never; }>(object: I): CreateMarketplaceContract;
};
export declare const ConfigMarketplaceContract: {
    encode(message: ConfigMarketplaceContract, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ConfigMarketplaceContract;
    fromJSON(object: any): ConfigMarketplaceContract;
    toJSON(message: ConfigMarketplaceContract): unknown;
    fromPartial<I extends {
        MarketplaceID?: Uint8Array | undefined;
        Name?: Uint8Array | undefined;
        ReferralAddress?: Uint8Array | undefined;
        ReferralPercentage?: number | undefined;
    } & {
        MarketplaceID?: Uint8Array | undefined;
        Name?: Uint8Array | undefined;
        ReferralAddress?: Uint8Array | undefined;
        ReferralPercentage?: number | undefined;
    } & { [K in Exclude<keyof I, keyof ConfigMarketplaceContract>]: never; }>(object: I): ConfigMarketplaceContract;
};
export declare const AccKey: {
    encode(message: AccKey, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): AccKey;
    fromJSON(object: any): AccKey;
    toJSON(message: AccKey): unknown;
    fromPartial<I extends {
        address?: Uint8Array | undefined;
        weight?: number | undefined;
    } & {
        address?: Uint8Array | undefined;
        weight?: number | undefined;
    } & { [K in Exclude<keyof I, keyof AccKey>]: never; }>(object: I): AccKey;
};
export declare const AccPermission: {
    encode(message: AccPermission, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): AccPermission;
    fromJSON(object: any): AccPermission;
    toJSON(message: AccPermission): unknown;
    fromPartial<I extends {
        Type?: AccPermission_AccPermissionType | undefined;
        PermissionName?: string | undefined;
        Threshold?: number | undefined;
        Operations?: Uint8Array | undefined;
        Signers?: {
            address?: Uint8Array | undefined;
            weight?: number | undefined;
        }[] | undefined;
    } & {
        Type?: AccPermission_AccPermissionType | undefined;
        PermissionName?: string | undefined;
        Threshold?: number | undefined;
        Operations?: Uint8Array | undefined;
        Signers?: ({
            address?: Uint8Array | undefined;
            weight?: number | undefined;
        }[] & ({
            address?: Uint8Array | undefined;
            weight?: number | undefined;
        } & {
            address?: Uint8Array | undefined;
            weight?: number | undefined;
        } & { [K in Exclude<keyof I["Signers"][number], keyof AccKey>]: never; })[] & { [K_1 in Exclude<keyof I["Signers"], keyof {
            address?: Uint8Array | undefined;
            weight?: number | undefined;
        }[]>]: never; }) | undefined;
    } & { [K_2 in Exclude<keyof I, keyof AccPermission>]: never; }>(object: I): AccPermission;
};
export declare const UpdateAccountPermissionContract: {
    encode(message: UpdateAccountPermissionContract, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): UpdateAccountPermissionContract;
    fromJSON(object: any): UpdateAccountPermissionContract;
    toJSON(message: UpdateAccountPermissionContract): unknown;
    fromPartial<I extends {
        Permissions?: {
            Type?: AccPermission_AccPermissionType | undefined;
            PermissionName?: string | undefined;
            Threshold?: number | undefined;
            Operations?: Uint8Array | undefined;
            Signers?: {
                address?: Uint8Array | undefined;
                weight?: number | undefined;
            }[] | undefined;
        }[] | undefined;
    } & {
        Permissions?: ({
            Type?: AccPermission_AccPermissionType | undefined;
            PermissionName?: string | undefined;
            Threshold?: number | undefined;
            Operations?: Uint8Array | undefined;
            Signers?: {
                address?: Uint8Array | undefined;
                weight?: number | undefined;
            }[] | undefined;
        }[] & ({
            Type?: AccPermission_AccPermissionType | undefined;
            PermissionName?: string | undefined;
            Threshold?: number | undefined;
            Operations?: Uint8Array | undefined;
            Signers?: {
                address?: Uint8Array | undefined;
                weight?: number | undefined;
            }[] | undefined;
        } & {
            Type?: AccPermission_AccPermissionType | undefined;
            PermissionName?: string | undefined;
            Threshold?: number | undefined;
            Operations?: Uint8Array | undefined;
            Signers?: ({
                address?: Uint8Array | undefined;
                weight?: number | undefined;
            }[] & ({
                address?: Uint8Array | undefined;
                weight?: number | undefined;
            } & {
                address?: Uint8Array | undefined;
                weight?: number | undefined;
            } & { [K in Exclude<keyof I["Permissions"][number]["Signers"][number], keyof AccKey>]: never; })[] & { [K_1 in Exclude<keyof I["Permissions"][number]["Signers"], keyof {
                address?: Uint8Array | undefined;
                weight?: number | undefined;
            }[]>]: never; }) | undefined;
        } & { [K_2 in Exclude<keyof I["Permissions"][number], keyof AccPermission>]: never; })[] & { [K_3 in Exclude<keyof I["Permissions"], keyof {
            Type?: AccPermission_AccPermissionType | undefined;
            PermissionName?: string | undefined;
            Threshold?: number | undefined;
            Operations?: Uint8Array | undefined;
            Signers?: {
                address?: Uint8Array | undefined;
                weight?: number | undefined;
            }[] | undefined;
        }[]>]: never; }) | undefined;
    } & { [K_4 in Exclude<keyof I, "Permissions">]: never; }>(object: I): UpdateAccountPermissionContract;
};
declare type ProtoMetaMessageOptions = {
    options?: {
        [key: string]: any;
    };
    fields?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    oneof?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    nested?: {
        [key: string]: ProtoMetaMessageOptions;
    };
};
export interface ProtoMetadata {
    fileDescriptor: FileDescriptorProto;
    references: {
        [key: string]: any;
    };
    dependencies?: ProtoMetadata[];
    options?: {
        options?: {
            [key: string]: any;
        };
        services?: {
            [key: string]: {
                options?: {
                    [key: string]: any;
                };
                methods?: {
                    [key: string]: {
                        [key: string]: any;
                    };
                };
            };
        };
        messages?: {
            [key: string]: ProtoMetaMessageOptions;
        };
        enums?: {
            [key: string]: {
                options?: {
                    [key: string]: any;
                };
                values?: {
                    [key: string]: {
                        [key: string]: any;
                    };
                };
            };
        };
    };
}
export declare const protoMetadata: ProtoMetadata;
declare type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export declare type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
declare type KeysOfUnion<T> = T extends T ? keyof T : never;
export declare type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & {
    [K in Exclude<keyof I, KeysOfUnion<P>>]: never;
};
export {};
