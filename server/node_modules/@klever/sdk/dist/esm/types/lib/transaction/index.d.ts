import * as Contracts from './proto/contracts';
import * as proto from "./../../google/protobuf/any";
import { Transaction as T, TXContract_ContractType, TXContract } from './proto/transaction';
export { TXContract_ContractType, TXContract, Contracts, proto, };
declare class Transaction {
    data: T;
    constructor(data?: any[] | {
        Nonce?: number;
        Sender?: Uint8Array;
        Contract?: TXContract[];
        PermissionID?: number;
        Data?: Uint8Array[];
        KAppFee?: number;
        BandwidthFee?: number;
        Version?: number;
        ChainID?: Uint8Array;
    });
    addContract: (type: TXContract_ContractType, contract: any) => Promise<void>;
    signMessage: (message: string, privateKey: string) => Promise<Uint8Array>;
    computeHash: () => string;
    sign: (privateKey: string) => Promise<Boolean>;
    hex: () => string;
    toJSON: () => string;
    decode: () => string;
    toBroadcast: () => any;
}
export default Transaction;
