import { IAccountNonce, IBroadcastResponse, IContractRequest, IFees, IProvider, ITransaction, ITxOptionsRequest, IAccount, ITransactionResponseData } from "./types/dtos";
export declare class KleverWeb {
    constructor(address?: string, pvd?: IProvider);
    setWalletAddress: (address: string) => void;
    getWalletAddress: () => string;
    setProvider: (provider: IProvider) => void;
    getProvider: () => IProvider;
    getBalance: () => Promise<any>;
    getAccountDetails: () => Promise<IAccount>;
    getAssetBalance: (assetId: string) => Promise<number>;
    getAssetBalanceAndPrecision: (assetId: string) => Promise<{
        balance: number;
        precision: number;
    }>;
    getNonce: () => Promise<IAccountNonce>;
    buildTransactionWithHash: (contracts: IContractRequest[], txData?: string[], options?: ITxOptionsRequest) => Promise<ITransactionResponseData>;
    buildTransaction: (contracts: IContractRequest[], txData?: string[], options?: ITxOptionsRequest) => Promise<ITransaction>;
    getFees: (contracts: IContractRequest[], txData?: string[], options?: ITxOptionsRequest) => Promise<IFees>;
    broadcastTransactions: (txs: ITransaction[]) => Promise<IBroadcastResponse>;
    signTransaction: (tx: ITransaction) => Promise<ITransaction>;
    signMessage: (msg: string) => Promise<string>;
    validateSignature: (msg: string, signature: string, pubKey: string) => Promise<boolean>;
}
export default KleverWeb;
